[project]
name = "markuplift"
dynamic = ["version"]
authors = [{ name = "Robert Smallshire", email = "robert@smallshire.org.uk" }]
description = "A configurable XML and HTML formatter."
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: XML",
]
dependencies = [
    "click>=8.2.1",
    "jsbeautifier>=1.15.4",
    "lxml>=6.0.1",
    "pytest>=8.4.1",
    "typename>=1.0.4",
]

[project.scripts]
markuplift = "markuplift.cli:cli"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = { attr = "markuplift.__version__" }

[tool.setuptools.packages.find]
where = ["src"]


[dependency-groups]
lint = [
    "ruff>=0.7.0",
    "mypy>=1.0.0",
]
doc = [
    "added-value>=0.24.0",
    "better-apidoc>=0.3.2",
    "jinja2>=3.1.0",
    "python-dotenv>=1.0.1",
    "sphinx>=8.1.3",
    "sphinx-rtd-theme>=3.0.2",
    "sphinxcontrib-programoutput>=0.18",
]
test = [
    "approvaltests>=15.3.2",
    "hypothesis>=6.92.2",
    "pytest>=8.4.1",
    "pytest-approvaltests>=0.2.4",
]
dev = [
    "bump-my-version>=0.28.0",
    {include-group = "doc"},
    {include-group = "test"},
]


[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"


[tool.bumpversion]
current_version = "4.1.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
tag = true
commit = true
message = "Bump version: {current_version} → {new_version}"
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
files = [
    { filename = "src/markuplift/__init__.py" },
]

[tool.flake8]
max-line-length = 120

[tool.ruff]
line-length = 120

[tool.pylint]
max-line-length = 120

[tool.coverage.report]
exclude_also = [
  "raise AssertionError",
  "raise NotImplementedError",
  "@(abc\\.)?abstractmethod",
]

[tool.mypy]
# Basic settings
python_version = "3.12"
packages = ["markuplift"]

# Error output
show_error_codes = true
show_column_numbers = true
pretty = true

# Import discovery
mypy_path = "src"
namespace_packages = true

# Start with basic checks
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false  # Too noisy initially
check_untyped_defs = true

# More lenient settings to start with
disallow_untyped_defs = false  # Too many errors initially
disallow_any_generics = false  # Too restrictive initially
disallow_incomplete_defs = false  # Too many errors initially
no_implicit_optional = false  # Gradual adoption

# Focus on critical issues first
strict_optional = true
warn_unreachable = true

# Per-module options for external libraries
[[tool.mypy.overrides]]
module = [
    "lxml.*",
    "jsbeautifier.*",
    "approvaltests.*",
    "hypothesis.*",
]
ignore_missing_imports = true
